name: release-alpha
on:
  push:
    branches: [alpha]
  workflow_dispatch:

env:
  GODOT_VERSION: 4.5
  EXPORT_NAME: example
  PROJECT_PATH: . # NOTE: If your `project.godot` is at the repository root, set `PROJECT_PATH` to ".".

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        target-platform:
          - { os: "Windows Desktop", build_dir: "windows", extension: "exe", export: "release" }
          - { os: "Linux/X11", build_dir: "linux", extension: "x86_64", export: "release" }
          - { os: "macOS", build_dir: "mac", extension: "zip", export: "release" }
          - { os: "Android Debug", build_dir: "android", extension: "apk", export: "debug" }
    name: ${{ matrix.target-platform.os }}
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.5
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          lfs: true
      - name: Setup Export Templates
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Setup Godot Config
        if: matrix.target-platform.os == 'Windows Desktop' || matrix.target-platform.os == 'Android Debug'
        run: |
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
      - name: Setup Debug Keystore
        if: matrix.target-platform.os == 'Android Debug'
        run: mv /root/debug.keystore ~/.local/share/godot/debug.keystore
      - name: ${{ matrix.target-platform.os }} Build
        run: |
          mkdir -v -p build/${{ matrix.target-platform.build_dir }}
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-${{ matrix.target-platform.export }} "${{ matrix.target-platform.os }}" \
          "$EXPORT_DIR/${{ matrix.target-platform.build_dir }}/$EXPORT_NAME.${{ matrix.target-platform.extension }}"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target-platform.build_dir }}
          path: build/${{ matrix.target-platform.build_dir }}/${{ env.EXPORT_NAME }}.${{ matrix.target-platform.extension }}
  create-release:
    name: Create new alpha version release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get Bump Version
        id: bump_version
        uses: SamirMarin/get-labels-action@v0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          label_key: bump
          label_value_order: "patch, minor, major, ignore"
          default_label_value: patch
      - name: Create Release Tag
        id: release_tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ steps.bump_version.outputs.label_value }}
          default_prerelease_bump: ${{ steps.bump_version.outputs.label_value }}
          pre_release_branches: "alpha"
          tag_prefix: v
          append_to_pre_release_tag: alpha
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/windows/*"
          tag: ${{ steps.release_tag.outputs.new_tag }}
          name: Release ${{ steps.release_tag.outputs.new_tag }}
          body: ${{ steps.release_tag.outputs.changelog }}
